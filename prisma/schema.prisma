generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  firstName    String   @map("first_name")
  lastName     String   @map("last_name")
  email        String   @unique
  password     String
  role         String   @default("COACH")
  tokenVersion Int      @default(0) @map("token_version")
  gym          Gym      @relation(fields: [gymId], references: [id])
  gymId        Int      @map("gym_id")

  @@map("user")
}

model Gym {
  id                 Int                 @id @default(autoincrement())
  createdAt          DateTime            @default(now()) @map("created_at")
  updatedAt          DateTime            @updatedAt @map("updated_at")
  name               String
  logoUrl            String?             @map("logo_url")
  user               User[]
  gymClass           GymClass[]
  workout            Workout[]
  workoutExternalApi WorkoutExternalApi?

  @@map("gym")
}

model GymClass {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  type         String   @default("Crossfit")
  dayOfTheWeek Int      @map("day_of_the_week")
  startTime    String   @map("start_time")
  endTime      String   @map("end_time")
  gym          Gym      @relation(fields: [gymId], references: [id])
  gymId        Int      @map("gym_id")

  @@map("gym_class")
}

model Workout {
  id             Int              @id @default(autoincrement())
  createdAt      DateTime         @default(now()) @map("created_at")
  updatedAt      DateTime         @updatedAt @map("updated_at")
  type           String           @default("Crossfit")
  dayOfTheWeek   Int              @map("day_of_the_week")
  gym            Gym              @relation(fields: [gymId], references: [id])
  gymId          Int              @map("gym_id")
  workoutSection WorkoutSection[]


  @@map("workout")
}

model WorkoutSection {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  title     String
  body      String
  order     Int
  workoutId Int      @map("workout_id")
  workout   Workout  @relation(fields: [workoutId], references: [id])

  @@map("workout_section")
}

model WorkoutExternalApi {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  token     String
  endpoint  String
  type      String
  gym       Gym      @relation(fields: [gymId], references: [id])
  gymId     Int      @unique

  @@map("workout_external_api")
}
